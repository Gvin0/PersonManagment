// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Person.Repository;

namespace Person.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191216164123_LstMigration")]
    partial class LstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Person.Domain.Domains.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1992, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Test1",
                            FirstName = "Test1",
                            Gender = 1,
                            LastName = "Test1",
                            PrivateNumber = "11111111111"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1995, 2, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Tbl",
                            FirstName = "Test2",
                            Gender = 1,
                            LastName = "Test2",
                            PrivateNumber = "11111111111"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1994, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Tbilisi",
                            FirstName = "Test3",
                            Gender = 0,
                            LastName = "Test3",
                            PrivateNumber = "11111111111"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2001, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Test3",
                            FirstName = "Test4",
                            Gender = 0,
                            LastName = "Test4",
                            PrivateNumber = "11111111111"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2000, 5, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Test3",
                            FirstName = "Test5",
                            Gender = 0,
                            LastName = "Test5",
                            PrivateNumber = "11111111111"
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2000, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            City = "Test6",
                            FirstName = "Test6",
                            Gender = 0,
                            LastName = "Test6",
                            PrivateNumber = "11111111111"
                        });
                });

            modelBuilder.Entity("Person.Domain.Domains.PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberType")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = "123123",
                            NumberType = 0,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 2,
                            Number = "456456",
                            NumberType = 1,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = "777777",
                            NumberType = 2,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 4,
                            Number = "888888",
                            NumberType = 2,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 5,
                            Number = "55555555",
                            NumberType = 2,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 6,
                            Number = "66666666",
                            NumberType = 0,
                            PersonId = 4
                        },
                        new
                        {
                            Id = 7,
                            Number = "77777777",
                            NumberType = 1,
                            PersonId = 5
                        },
                        new
                        {
                            Id = 8,
                            Number = "77777777",
                            NumberType = 1,
                            PersonId = 6
                        });
                });

            modelBuilder.Entity("Person.Domain.Domains.Relation", b =>
                {
                    b.Property<int>("FromId")
                        .HasColumnType("int");

                    b.Property<int>("ToId")
                        .HasColumnType("int");

                    b.Property<int>("RelationType")
                        .HasColumnType("int");

                    b.HasKey("FromId", "ToId");

                    b.HasIndex("ToId");

                    b.ToTable("Relations");

                    b.HasData(
                        new
                        {
                            FromId = 1,
                            ToId = 3,
                            RelationType = 3
                        },
                        new
                        {
                            FromId = 1,
                            ToId = 2,
                            RelationType = 2
                        },
                        new
                        {
                            FromId = 3,
                            ToId = 4,
                            RelationType = 3
                        },
                        new
                        {
                            FromId = 3,
                            ToId = 6,
                            RelationType = 3
                        },
                        new
                        {
                            FromId = 5,
                            ToId = 1,
                            RelationType = 0
                        },
                        new
                        {
                            FromId = 6,
                            ToId = 2,
                            RelationType = 0
                        });
                });

            modelBuilder.Entity("Person.Domain.Domains.PhoneNumber", b =>
                {
                    b.HasOne("Person.Domain.Domains.Person", "Person")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Person.Domain.Domains.Relation", b =>
                {
                    b.HasOne("Person.Domain.Domains.Person", "PersonFrom")
                        .WithMany("RelatedTo")
                        .HasForeignKey("FromId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Person.Domain.Domains.Person", "PersonTo")
                        .WithMany("RelatedFrom")
                        .HasForeignKey("ToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
